@prefix ns1: <http://example.org/masters/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

ns1:Licence_3_L3_Info___Informatique___mineure_Informatique_Année_universitaire rdfs:label "nan" ;
    ns1:parcours "licence Informatique" .

ns1:Anglais_pour_la_communication_scientifique__info_ rdfs:label "nan" ;
    ns1:content """
1. Développement du vocabulaire scientifique général
2. Développement du vocabulaire scientifique de spécialité
3. Analyse de textes scientifiques
4. Développement de la capacité à adapter son discours à différentes situations de communication scientifique
4. Analyse de documents audio ou vidéo
5. Pratique de l’oral en contexte
6. Sensibilisation au système phonologique de l’anglais pour améliorer la prise de parole des étudiant-e-s
""" ;
    ns1:level "Licence" ;
    ns1:semester "5" ;
    ns1:objective """
À l’issue de cet enseignement, l’étudiant-e sera capable de :
1. répondre à des questions de compréhension sur un texte rédigé en anglais universitaire, que ce soit dans son domaine de spécialité ou dans un autre domaine, dans un esprit similaire à ce qui est proposé à l’épreuve de compréhension écrite de la certification IELTS Academic English.
2. présenter à l’oral un texte issu de la presse scientifique générale dans son domaine de spécialité, replacer l’article dans son contexte et expliquer les enjeux de la recherche ou de la thématique abordée dans cet article.
3. présenter son travail dans un anglais clair et phonologiquement approprié, en utilisant des outils de présentation adaptés et en communiquant avec un degré d’aisance et de spontanéité qui rende possible une interaction normale avec un locuteur natif, sans recours excessif aux notes.
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Maths Info / mineure Maths Info,L3 Info : Maths Info / mineure CMI OPTIM,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Algorithmique_et_Structures_de_données_3 rdfs:label "nan" ;
    ns1:content """
Analyse de problèmes de décision : présentation des notions de décidabilité, introduction des classes de complexité P, NP et Pspace. Présentation la Karp-réduction et de problèmes NP-Dur et NP-Complets.
Vérification de programme
• Vérification dynamiques : aléatoire ; fonctionnelle ; structurelle
• Vérification statique : informelle ; formelle (Hoare et Dijkstra) : correction, terminaison. Preuve et analyse en complexité temporelle de programmes itératifs et récursifs
""" ;
    ns1:level "Licence" ;
    ns1:semester "5" ;
    ns1:objective """
A l'issue du module, l'étudiant sera initié à
- Savoir choisir choisir des techniques de réduction adaptées aux propriétés à préserver
- Savoir classer des problèmes de décision
- Savoir choisir les types vérifications à réaliser en fonction des programmes Il saura appliquer les concepts suivants:
- Être capable d'écrire formellement des réductions, simples, de NP-complétude
- Savoir choisir des propriétés à vérifier pour prouver un algorithme et pour établir sa complexité temporelle
- Savoir écrire, pour des algorithmes simples, des preuves de correction et des preuves de complexité temporelle
- Être capable de travailler en groupe
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Maths Info / mineure Maths Info,L3 Info : Maths Info / mineure CMI OPTIM,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Architecture_des_ordinateurs rdfs:label "nan" ;
    ns1:content """
Automates finis et analyse lexicale : langages et opérations, langages rationnels, automates finis, automates finis déterministes. Équivalence des expressions rationnelles et des automates finis. Analyse lexicale, expressions rationnelles étendues.
Grammaires formelles : classification, grammaires hors contexte, arbre de dérivation, ambiguïté, formes normales. Automates à pile et transducteurs finis.
Analyse syntaxique : analyse ascendante et descendante avec rebroussement, méthodes tabulaires, analyse sans rebroussement : grammaires de précédence, grammaires LL(k).
Travaux Pratiques : Lex et Yacc
""" ;
    ns1:level "Licence" ;
    ns1:semester "5" ;
    ns1:objective """
A l'issue du module, l'étudiant sera initié à
- Savoir utiliser les logiciels flex et bison Il maîtrisera les concepts:
- Savoir raisonner sur les langages formels
- Savoir écrire une expression rationnelle
- Savoir résoudre un système d'équations linéaires droites
- Savoir si un mot correspond à une expression rationnelle
- Savoir déterminer la classe d'une grammaire formelle dans la hiérarchie de Chomsky
- Savoir si un mot est engendré par une grammaire rationnelle, algébrique ou contextuelle
- Connaître les propriétés d'un automate fini
- Savoir rendre déterministe un automate fini
- Savoir minimaliser le nombre d'états d'un automate fini déterministe
- Savoir si un mot est accepté par un automate fini
- Savoir transformer une grammaire rationnelle en une expression rationnelle ou en un automate fini et inversement
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Réseaux_et_Télécoms rdfs:label "Réseaux et Télécoms" ;
    ns1:content """
Programme - Contenu de l'UE : Internet : comment ça marche.
• Introduction : les chiffres de l'Internet, histoire et perspectives.
• Les protocoles applicatifs (http, smtp, dns, ...)
• Le problème du transport fiable de bout en bout. TCP.
• Le problème du contrôle de flux et congestion. TCP.
• Le problème de l'adressage et du routage. IP.
• Le problème du partage du canal de transmission.
• Les codes détecteurs et correcteurs d'erreurs.
• Les réseaux mobile et sans fil.
• Sécurité informatique.
""" ;
    ns1:level "Licence" ;
    ns1:semester "5" ;
    ns1:objective """
A l'issue de ce cours, l'étudiant doit:
• Acquérir une vue globale des mécanismes mis en jeu dans l’Internet (« Internet : comment ça marche ? » ) ;
• Comprendre les mécanismes de base des protocoles de l’Internet (http, tcp, ip, arp);
• Connaître les défis techniques et sociétaux liés aux déploiements des réseaux;
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Ouverture_professionnelle___Informatique rdfs:label "Ouverture professionnelle - Informatique" ;
    ns1:content """
L’enseignement de cette UE est réparti comme suit :
1. Des séances de TD permettant de travailler en mode projet sur la recherche de stage et la communication orale : méthodologie, CV, lettre de motivation, utilisation du réseau professionnel LinkedIn, de l’outil CareerCenter et certains réseaux pour les scientifiques tels que Researchgate.
2. Des séances de TD permettant de vivre et de comprendre le fonctionnement d’une structure professionnelle. Ces séances permettront également à l’étudiant de réfléchir à son positionnement en tant que stagiaire dans un environnement professionnel.
2h40 : TD 1 : Méthodologie de recherche de stage : réflexion sur les objectifs pour ce stage, construction des différentes étapes de la recherche, décryptage d’une offre, mise à jour des compétences, du CV et personnalisation de la lettre de motivation.
1h20 : TD 2 : Outils de recherche de stage : CareerCenter, LinkedIn : présentation et temps pour remplir son profil.
2h40 : TD 3 : Communication orale : les fondamentaux de la communication, le non verbal, comment construire une présentation professionnelle pour se présenter à un recruteur (pitch), adopter une posture professionnelle.
4h00 : TD 4 : Simulations d’entretiens en sous-groupes autonomes et présentation du pitch
(évaluation).
4h00 : TD 5 : Les différentes structures et organisations possibles dans le monde du travail / Droits et devoirs du stagiaire.
1h20 : TD 6 : L’après licence : en sous-groupes, argumentation de ses perspectives post-licence.
Enseignement en distanciel
Avant certaines séances de TD (TD1, TD2, TD3, TD5), un enseignement en distanciel sera proposé aux étudiants :
Outils de mise en réflexion sur les objectifs du stage recherchés ;
Documents à lire de façon à pouvoir les mettre en œuvre autour de la méthodologie de recherche de stage ;
Power points à visionner sur les outils Career Center et LinkedIn ;
Vidéos à visionner sur les différentes organisations et types de métiers exercés dans une organisation ;
Quizz à réaliser sur les droits et devoirs du stagiaire.
""" ;
    ns1:level "Licence" ;
    ns1:semester "5" ;
    ns1:objective """
Projet Professionnel : recherche de stage et poursuite d’études A l’issue de cette UE, l’étudiant saura :
- optimiser sa méthodologie de recherche de stage
- décrypter une offre de stage
- réactualiser ses compétences et remettre son CV à jour
- le fonctionnement des réseaux sociaux professionnels et créer son profil
- utiliser les services de l’université pour ses recherches de stage ou d’emploi. Découverte et connaissance du monde du travail
A l’issue de cette UE, l’étudiant aura :
- travaillé en équipe sur les différentes structures et organisations possibles rencontrées dans le monde du travail (statut juridique, services, organigramme, taille, valeurs, partenaires..)
- étudié une structure en particulier, en lien avec son projet professionnel
- par le biais d’un jeu de rôle, pris conscience du rôle des différents services (RH, marketing, commercial,…) d’une structure dans le développement et le déploiement d’un projet
- connaissance de ses droits et devoirs en tant que stagiaire et aura travaillé sur sa manière de s’intégrer et de s’adapter dans un nouveau milieu professionnel
- connaissance de ce qu’est l’entreprenariat et des dispositifs en lien à l’université Communication
Au terme de l’UE ‘Ouverture Professionnelle’, l’étudiant connaitra :
- les principes fondamentaux de la communication systémique et interpersonnelle, utiles pour communiquer en milieu professionnel
- la manière d'exprimer un message clair, précis, bienveillant, à la reformulation et à l’expression d’un feedback
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Maths Info / mineure Maths Info,L3 Info : Maths Info / mineure CMI OPTIM,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Stage_libre rdfs:label "Stage libre" ;
    ns1:level "Licence" ;
    ns1:semester "5" ;
    ns1:parcours """
L3 Chimie : Chimie / mineure Chimie Avancée, L3 Chimie : Chimie Biologie,L3 Chimie : Chimie- Physique DOUBLE DIPLOME,L3 Chimie : Chimie /mineure Enseigner à l'Ecole Primaire EEP,L3 Physique : Mécanique - CMI Ingé. Calcul Méca. _ CMI-ICM,L3 Physique : Physique - CMI Ingé. Nuclé. et Appli. _ CMI-INA,L3 Maths : Maths / mineure CMI Ingéniérie Statistique _ CMI-IS,L3 Info
: Maths Info / mineure CMI OPTIM,L3 SPI : Electronique, Energie Electrique, Automatique _ EEA,2025 L3 SPI Génie Civil,L3 Info : Informatique / mineure Informatique,L3 Maths : Maths Economie,L3 Info : Maths Info / mineure Maths Info,L3 Maths : Maths / mineure Maths,L3 Info : MIAGE - CLASSIQUE,L3 Physique : Physique,L3 Physique : Physique / mineure Enseigner à l'Ecole Primaire _ EEP,L3 Physique : Physique-Chimie DOUBLE DIPLOME,L3 Physique : Mécanique,L3 SV : Advanced Biology Training ABT,L3 SV : Biologie Cellulaire et Moléculaire BCM,L3 SV : Biologie Cellulaire et Physiologie Animale BCPA,L3 SV : Sciences du Végétal et de l'Aliment SVA / mineure SVA,L3 SV : Sciences du Végétal et de l'Aliment SVA / mineure Enseigner à l'Ecole Primaire _ EEP,L3 SV : Biologie Cellulaire Véto Agro BCVA,L3 SVT : Biologie Écologie _BE,L3 SVT : Biologie, Géologie, Environnement BGE / mineure Enseigner à l'Ecole Primaire _ EEP,L3 SVT : Biologie, Géologie, Environnement BGE / mineure Enseigner les SVT,L3 SVT : Biologie, Géologie, Environnement BGE / mineure Environnement,L3 SVT : Sciences de la Terre et de l'Univers STU,L3 SV : Sciences du Végétal et de l'Aliment LAS3,L3 SVT : Biologie Écologie _BE LAS3, L3 Chimie : Chimie / mineure Chimie Avancée LAS3,L3 Physique : Physique LAS3,L3 Maths : Maths / mineure Maths LAS3,L3 Info : Informatique / mineure Informatique LAS3,2025 L3 SPI EEA,2025 L3 SVT Biologie Ecologie,2025 L3 SVT Enseigner les SVT,2025 L3 SVT Géosciences,2025 L3 SVT LAS 3 Biologie Ecologie,2025 L3 SVT Sciences de l'environnement,2025 L3 INFO Informatique,2025 L3 INFO Informatique mathématiques,2025 L3 INFO option santé (L.AS 3),2025 L3SV : Biologie Cellulaire et Physiologie Animale,2025 L3SV : Sciences du Végétal et de l'Aliment,2025 L3SV : Biologie Vétérinaire Agronomie,2025 L3SV : Biologie Cellulaire et Moléculaire,2025 L3SV:  Advanced Biology Training,2025 L3SV : Licence SV Accès Santé - LAS3 - ,2025 L3 INFO CMI OPT/IM,2025 L3SV ABT S5 100% Anglais,2025 L3 MIASHS - parcours economie,2025 L3 Mathématiques,2025 L3 Maths L.AS Maths,2025 L3 MATHS CMI IS,2025 L3 Physique Chimie,2025 L3 Chimie,2025 L3 Chimie option Santé,2025 L3 Chimie-Biologie,2025 L3 Physique - CMI INA,2025 L3 Physique,2025 L3 Mécanique - CMI ICM,2025 L3 Mécanique,2025 L3 Physique OPTION SANTE,L3 SPI Génie Civil,L3 SPI Génie Civil option SANTE,2025 L3 SPI Génie Civil option SANTE,2025 L3 SPI EEA option Santé
""" .

ns1:Anglais_Professionnel_Informatique rdfs:label "Anglais Professionnel Informatique" ;
    ns1:content """
1. Développement du vocabulaire utilisé en anglais professionnel (vocabulaire susceptible d’être utilisé dans les tests TOEIC)
2. Discussion des spécificités des CV aux États-Unis et en Grande-Bretagne
3. Contenu d’une lettre de motivation
4. Déroulement d’un entretien d’embauche
5. Vocabulaire utilisé lors des communications téléphoniques
6. Pratique de l’oral en contexte
7. Sensibilisation au système phonologique de l’anglais pour améliorer la prise de parole des étudiant-e-s
""" ;
    ns1:level "Licence" ;
    ns1:semester "6" ;
    ns1:objective """
À l’issue de cet enseignement, l’étudiant-e sera capable de :
1. réaliser un rapport dans le cadre d’un projet de groupe impliquant une mise en situation dans un contexte professionnel simulé
2. rédiger un texte dans un anglais clair et grammaticalement approprié au contexte, dans le cadre d’un projet de groupe
3. faire une présentation orale s’appuyant sur le travail de groupe préparé dans le rapport écrit, en s’exprimant dans un anglais clair et phonologiquement approprié et en communiquant avec un  degré d’aisance et de spontanéité qui rende possible une interaction normale avec un locuteur natif, sans recours excessif aux notes
4. utiliser des outils de présentation adaptés à la situation de communication
5. répondre à des questions de compréhension sur des documents audio authentiques
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Maths Info / mineure Maths Info,L3 Info : Maths Info / mineure CMI OPTIM,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Programmation_fonctionnelle rdfs:label "Programmation fonctionnelle" ;
    ns1:content """
Programme :
•
Les paradigmes de programmation déjà étudiés et celui de la programmation fonctionnelle
•
Programmation fonctionnelle pure
•
Expression, valeur et type
•
Valeur fonctionnelle (en bref : fonction)
•
Fonction d'ordre supérieur
•
Application d'une fonction (y compris application partielle)
•
Évaluation stricte, évaluation paresseuse
•
Inférence de type
• Polymorphisme
•
Définition (ou liaison) : locale ou globale
•
Fonction anonyme
•
Définition inductive d'ensembles
•
Preuve par récurrence, preuve par induction structurelle
•
Définition récursive de fonctions (y compris mutuelle)
•
Définition de types (dont définition récursive, y compris mutuelle)
•
Programmation par filtrage de motifs
•
Preuve de terminaison et de correction d'un programme fonctionnel
•
Récursivité terminale
•
Effet de bord
•
Programmer en combinant paradigmes fonctionnel et impératif
• Apprentissage d'un langage fonctionnel avec inférence de types, permettant de programmer par filtrage et de combiner ces paradigmes
""" ;
    ns1:level "Licence" ;
    ns1:semester "6" ;
    ns1:objective """
A l’issue de cette UE, l’étudiant saura :
•
implémenter des algorithmes, y compris de traitement de structures de données linéaires, associatives et arborescentes, selon le paradigme fonctionnel (Application) ;
•
concevoir et employer des fonctions d’ordre supérieure (Application) ;
•
employer la programmation par filtrage de motifs pour les traitements symboliques (Application) ;
• expliquer et savoir simuler le mécanisme d’inférence de type (Compréhension) ;
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Maths Info / mineure Maths Info,L3 Info : Maths Info / mineure CMI OPTIM,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Recherche_opérationnelle rdfs:label "nan" ;
    ns1:content """
Cadres généraux de calcul
Systèmes de transitions et automates formels : automates et transducteurs finis, automates à piles et à compteurs, machines de Turing.
Conception formelle relationnelle des automates et des calculs. Machines d'Eilenberg. Simulation des automates.
Calculs récursifs. Les principaux cas : langages hors contexte, sémantique des programmes logiques définis. Opérateurs continus sur les domaines partiellement ordonnés. Point fixe. Calculabilité et décidabilité
Énumérations de Godel. Fonctions récursives.
Problèmes non décidables. Réductions entre les problèmes. Calculs symboliques
Lambda calcul. Sémantique opérationnelle par réduction de termes. Propriété de Church-Rosser. Sémantique fonctionnelle. Liens avec les langages fonctionnels.
Systèmes équationnels. Sémantiques algébrique et opérationnelle. Problème de résolution. Systèmes de réécriture de termes. Problèmes de terminaison et de confluence. Ordres de calculabilité.
""" ;
    ns1:level "Licence" ;
    ns1:semester "6" ;
    ns1:objective """
A l'issue de ce module, l'étudiant saura:
- connaître les propriétés des langages algébriques
- concevoir un automate à pile à partir d'une grammaire algébrique
- savoir démontrer qu'un langage n'est pas algébrique à l'aide du lemme d'itération
- savoir démontrer qu'un ensemble est dénombrable / indénombrable
- concevoir une machine de Turing qui accepte / décide un langage
- distinguer un problème décidable d'un problème indécidable
- comprendre la résolution de problèmes par réduction
- comprendre la construction des fonctions et prédicats récursifs primitifs
- savoir faire une preuve par induction
- savoir construire des objets inductivement
- savoir construire des termes, les manipuler, et les transformer
- comprendre le mécanisme d'unification
- savoir ordonner des termes
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Maths Info / mineure Maths Info,L3 Maths : Maths / mineure CMI Ingéniérie Statistique _ CMI-IS,L3 Info : Maths Info / mineure CMI OPTIM,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Bases_de_données_2 rdfs:label "Bases de données 2" ;
    ns1:content """
Introduction aux systèmes de Gestion de Bases de données (architecture, évaluation et optimisation de requêtes, gestion des transactions et contrôle de concurrence, sensibilisation à la gestion des gros volumes de données)
Extension procédurale de SQL (PL/SQL) , BD actives (Déclencheurs) Interrogation d'une base avec JDBC
Modèle objet-relationnel
""" ;
    ns1:level "Licence" ;
    ns1:semester "6" ;
    ns1:objective """
A l'issue de ce module, l'étudiant devra:
• Comprendre les dépendances fonctionnelles
• Comprendre la normalisation des relations d’une base de données (formes normales) et l’impact opérationnel d’une normalisation.
• Être capable d’utiliser des algorithmes de décomposition de relations pour normaliser une base de données
• Avoir une bonne pratique d’un langage procédurale lié à une base de données, par exemple PL/SQL ou PL/pgSQL
• Savoir concevoir et appliquer les déclencheurs
• Savoir déterminer des contraintes d’intégrité
• Savoir appliquer un contrôle d’accès basique à une base de données
• Comprendre la notion de vue
• Connaître la structuration physique des données
• Comprendre la notion de transaction
• Comprendre la notion d’ordonnancement sérialisable
• Comprendre la technique de contrôle de concurrence par verrouillage
• Comprendre les fonctions d’un optimiseur de requêtes
• Comprendre un plan d’exécution d’une requête
• Connaître les structures accélératrices d’accès aux données (indexes)
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Stage rdfs:label "Stage" ;
    ns1:level "Licence" ;
    ns1:semester "6" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Informatique / mineure Informatique LAS3
""" .

ns1:Construction_et_évolution_de_logiciels rdfs:label "Français" ;
    ns1:content """
L'objectif de ce module est de maîtriser les étapes de développement logiciel, qu'il s'agisse de sa conception, sa construction, son développement, ses tests, son évolution mais aussi de sa modernisation. Les principes de travail dans une équipe de développement en entreprise. La rédaction de documentation logicielle, la maintenance logicielle, l'analyse de code et la gestion d'exception seront aussi abordés dans ce module.
""" ;
    ns1:level "Licence" ;
    ns1:semester "6" ;
    ns1:objective """
A l'issue de ce module, l'étudiant devra:
• Comprendre les principaux enjeux de la construction et de l'évolution de logiciels.
• Comprendre les approches de modernisation de logiciels, comme la rétro ingénierie, la réingénierie, le salvaging et la restructuration.
• Comprendre les différentes utilisations d'un gestionnaire de configurations dans un système en production.
• Être capable de réaliser un projet informatique   au sein d'une petite équipe et de le livrer à un client. En ce faisant, il doit démontre sa capacité à travailler en équipe et à livrer un projet correctement.
• Être capable d'appliquer les opérations de restructuration de code appropriées pour résoudre des problèmes de conception.
• Être capable d'appliquer des heuristiques connues de construction et de maintenance pour améliorer un logiciel existant, comme par exemple, éliminer des variables globales, appliquer des conventions de codage et rendre le logiciel testable.
• Être capable de traduire la conception détaillée d'un logiciel en code source. En ce faisant, il doit démontrer sa maîtrise des règles génériques de correspondance entre la conception et le code.
• Savoir organiser et rédiger le documentation utilisateur d'un logiciel dans le but de le rendre utilisable à long terme.
• Être capable d'effectuer des opération de maintenance corrective, perfective, adaptative et préventive.
• Être capable d'utiliser des outils d'analyse de code source pour appréhender un logiciel existant.
• Être capable d'utiliser la gestion d'exception, ainsi que d'autre techniques spécifiques aux langages de programmation pour améliorer la tolérance aux fautes.
""" ;
    ns1:parcours """
L3 Info : Informatique / mineure Informatique,L3 Info : Informatique / mineure Informatique LAS3
""" .

